{
  "hash": "3979ae6242554c0c49b2d9bad81410d6",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"팔머펭귄 종별 특징 분석 _ 5조(김예원, 박한슬, 송성필)\"\nauthor: \"song seong pil\"\ndate: \"2025-03-07\"\ncategories: [news, code, analysis]\nimage: \"penguin.jpg\"\n---\n\n::: {#45bda318 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nfrom palmerpenguins import load_penguins\n```\n:::\n\n\n# 1. 데이터 불러오기 및 기본 정보 출력\n\n::: {#15d7543a .cell execution_count=2}\n``` {.python .cell-code}\npenguins = load_penguins()\npenguins.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 344 entries, 0 to 343\nData columns (total 8 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   species            344 non-null    object \n 1   island             344 non-null    object \n 2   bill_length_mm     342 non-null    float64\n 3   bill_depth_mm      342 non-null    float64\n 4   flipper_length_mm  342 non-null    float64\n 5   body_mass_g        342 non-null    float64\n 6   sex                333 non-null    object \n 7   year               344 non-null    int64  \ndtypes: float64(4), int64(1), object(3)\nmemory usage: 21.6+ KB\n```\n:::\n:::\n\n\n# 2. 결측치 제거 및 종별 통계량 계산\n\n::: {#4a2ae7c8 .cell execution_count=3}\n``` {.python .cell-code}\npenguins = penguins.dropna()\nsummary = penguins.groupby('species')[['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g']]\nstats = summary.agg(['min', 'max', 'median', 'mean'])\nprint(\"Species별 통계량:\")\nprint(stats)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSpecies별 통계량:\n          bill_length_mm                         bill_depth_mm               \\\n                     min   max median       mean           min   max median   \nspecies                                                                       \nAdelie              32.1  46.0  38.85  38.823973          15.5  21.5  18.40   \nChinstrap           40.9  58.0  49.55  48.833824          16.4  20.8  18.45   \nGentoo              40.9  59.6  47.40  47.568067          13.1  17.3  15.00   \n\n                     flipper_length_mm                           body_mass_g  \\\n                mean               min    max median        mean         min   \nspecies                                                                        \nAdelie     18.347260             172.0  210.0  190.0  190.102740      2850.0   \nChinstrap  18.420588             178.0  212.0  196.0  195.823529      2700.0   \nGentoo     14.996639             203.0  231.0  216.0  217.235294      3950.0   \n\n                                        \n              max  median         mean  \nspecies                                 \nAdelie     4775.0  3700.0  3706.164384  \nChinstrap  4800.0  3700.0  3733.088235  \nGentoo     6300.0  5050.0  5092.436975  \n```\n:::\n:::\n\n\n# 3. 각 측정값별 최대/최소 값을 가진 종 확인\n\n::: {#cf006acb .cell execution_count=4}\n``` {.python .cell-code}\nmax_species = summary.idxmax()\nmax_values = summary.max()\nmin_species = summary.idxmin()\nmin_values = summary.min()\n```\n:::\n\n\n# 1. 종별 통계량 계산 (stats DataFrame)\n\n::: {#45483dbd .cell execution_count=5}\n``` {.python .cell-code}\nstats = summary.agg(['min', 'max', 'median', 'mean'])\n```\n:::\n\n\n# 2. stats의 MultiIndex 컬럼에서 'mean'만 추출\n\n::: {#6d5a3e19 .cell execution_count=6}\n``` {.python .cell-code}\nmean_stats = stats.xs('mean', axis=1, level=1)\n```\n:::\n\n\n# 3. 각 측정치별로 최대/최소값과 해당 종 구하기\n\n::: {#73bb40b3 .cell execution_count=7}\n``` {.python .cell-code}\nmax_species = mean_stats.idxmax()\nmax_values = mean_stats.max()\nmin_species = mean_stats.idxmin()\nmin_values = mean_stats.min()\n```\n:::\n\n\n# 4. 결과 DataFrame 생성: index는 각 측정치 이름이 됨\n\n::: {#6e9f7f13 .cell execution_count=8}\n``` {.python .cell-code}\nextreme_species = pd.DataFrame({\n    \"Max Species\": max_species,\n    \"Max Value\": max_values,\n    \"Min Species\": min_species,\n    \"Min Value\": min_values\n})\n\nprint(extreme_species)\n\nprint(\"\\n각 측정값별 최대/최소 값을 가진 종:\")\nprint(extreme_species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                  Max Species    Max Value Min Species    Min Value\nbill_length_mm      Chinstrap    48.833824      Adelie    38.823973\nbill_depth_mm       Chinstrap    18.420588      Gentoo    14.996639\nflipper_length_mm      Gentoo   217.235294      Adelie   190.102740\nbody_mass_g            Gentoo  5092.436975      Adelie  3706.164384\n\n각 측정값별 최대/최소 값을 가진 종:\n                  Max Species    Max Value Min Species    Min Value\nbill_length_mm      Chinstrap    48.833824      Adelie    38.823973\nbill_depth_mm       Chinstrap    18.420588      Gentoo    14.996639\nflipper_length_mm      Gentoo   217.235294      Adelie   190.102740\nbody_mass_g            Gentoo  5092.436975      Adelie  3706.164384\n```\n:::\n:::\n\n\n# 4. 서식지별, 성별, 종별 개체 수 집계\n\n::: {#63446e93 .cell execution_count=9}\n``` {.python .cell-code}\nresult = penguins.groupby(['island', 'species', 'sex']).size().reset_index(name='count')\nprint(\"\\n서식지, 종, 성별 별 개체 수:\")\nprint(result)\n\nresult2 = penguins.groupby(['island', 'species']).size().reset_index(name='count')\nprint(\"\\n서식지와 종별 개체 수:\")\nprint(result2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n서식지, 종, 성별 별 개체 수:\n      island    species     sex  count\n0     Biscoe     Adelie  female     22\n1     Biscoe     Adelie    male     22\n2     Biscoe     Gentoo  female     58\n3     Biscoe     Gentoo    male     61\n4      Dream     Adelie  female     27\n5      Dream     Adelie    male     28\n6      Dream  Chinstrap  female     34\n7      Dream  Chinstrap    male     34\n8  Torgersen     Adelie  female     24\n9  Torgersen     Adelie    male     23\n\n서식지와 종별 개체 수:\n      island    species  count\n0     Biscoe     Adelie     44\n1     Biscoe     Gentoo    119\n2      Dream     Adelie     55\n3      Dream  Chinstrap     68\n4  Torgersen     Adelie     47\n```\n:::\n:::\n\n\n",
    "supporting": [
      "penguin_brif_files"
    ],
    "filters": [],
    "includes": {}
  }
}